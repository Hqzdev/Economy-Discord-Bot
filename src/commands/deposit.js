const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const User = require('../models/User');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('deposit')
        .setDescription('–ü–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫')
        .addIntegerOption(option =>
            option.setName('amount')
                .setDescription('–°—É–º–º–∞ –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è')
                .setRequired(true)
                .setMinValue(1)),
    
    async execute(interaction) {
        try {
            const amount = interaction.options.getInteger('amount');

            // Get user
            let user = await User.findByDiscordId(interaction.user.id);
            if (!user) {
                user = await User.create(interaction.user.id, interaction.user.username, []);
            }

            // Check if user has enough cash
            if (user.cash < amount) {
                const embed = new EmbedBuilder()
                    .setTitle('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
                    .setDescription(`–£ –≤–∞—Å –≤ –∫–∞—Ä–º–∞–Ω–µ —Ç–æ–ª—å–∫–æ **${user.cash}** ${process.env.CURRENCY_NAME || '–∑–æ–ª–æ—Ç–æ'}.`)
                    .setColor(0x303135)
                    .setTimestamp();

                await interaction.reply({ embeds: [embed], ephemeral: true });
                return;
            }

            // Transfer to bank
            await user.transferToBank(amount);

            const embed = new EmbedBuilder()
                .setTitle('üè¶ –î–µ–ø–æ–∑–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!')
                .setDescription(`–í—ã –ø–æ–ª–æ–∂–∏–ª–∏ **${amount}** ${process.env.CURRENCY_NAME || '–∑–æ–ª–æ—Ç–æ'} –≤ –±–∞–Ω–∫.`)
                .addFields(
                    { name: 'üí∞ –í–∞—à –∫—ç—à', value: `${user.cash} ${process.env.CURRENCY_NAME || '–∑–æ–ª–æ—Ç–æ'}`, inline: true },
                    { name: 'üè¶ –í–∞—à –±–∞–Ω–∫', value: `${user.bank} ${process.env.CURRENCY_NAME || '–∑–æ–ª–æ—Ç–æ'}`, inline: true }
                )
                .setColor(0x303135)
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('Error executing deposit command:', error);
            await interaction.reply({ 
                content: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–Ω–µ—Å–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤.', 
                ephemeral: true 
            });
        }
    }
};

