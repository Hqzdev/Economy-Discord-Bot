#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç –≤—Å–µ—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤ –∏ —Ç–æ–≤–∞—Ä–æ–≤
 * 
 * –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª—è–µ—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã!
 * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å–∏—Å—Ç–µ–º—ã.
 * 
 * –ó–∞–ø—É—Å–∫: node scripts/clear-database.js
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import readline from 'readline';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const dbPath = path.join(__dirname, '../data/market.json');

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —á—Ç–µ–Ω–∏—è –≤–≤–æ–¥–∞
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer);
    });
  });
}

async function clearDatabase() {
  console.log('üóëÔ∏è  –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•');
  console.log('================================');
  console.log('');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  if (!fs.existsSync(dbPath)) {
    console.log('‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω:', dbPath);
    console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑');
    rl.close();
    return;
  }

  // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
  let currentData;
  try {
    const fileContent = fs.readFileSync(dbPath, 'utf8');
    currentData = JSON.parse(fileContent);
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    rl.close();
    return;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  console.log('üìä –¢–ï–ö–£–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log('----------------------');
  console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${currentData.users?.length || 0}`);
  console.log(`üì¶ –¢–æ–≤–∞—Ä—ã –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö: ${currentData.stocks?.length || 0}`);
  console.log(`üõí –ê–∫—Ç–∏–≤–Ω—ã–µ –ª–æ—Ç—ã: ${currentData.listings?.length || 0}`);
  console.log(`ü§ù –°–¥–µ–ª–∫–∏: ${currentData.deals?.length || 0}`);
  console.log(`üî® –ê—É–∫—Ü–∏–æ–Ω—ã: ${currentData.auctions?.length || 0}`);
  console.log(`üí∞ –°—Ç–∞–≤–∫–∏: ${currentData.bids?.length || 0}`);
  console.log(`üìã –õ–æ–≥–∏ –∞—É–¥–∏—Ç–∞: ${currentData.auditLog?.length || 0}`);
  console.log(`üí¨ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${currentData.persistentMessages?.length || 0}`);
  console.log('');

  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
  console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï!');
  console.log('=============');
  console.log('–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã:');
  console.log('‚Ä¢ –í—Å–µ –∞—É–∫—Ü–∏–æ–Ω—ã –∏ —Å—Ç–∞–≤–∫–∏');
  console.log('‚Ä¢ –í—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ –ª–æ—Ç—ã');
  console.log('‚Ä¢ –í—Å–µ —Å–¥–µ–ª–∫–∏');
  console.log('‚Ä¢ –í—Å–µ —Å–∫–ª–∞–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  console.log('‚Ä¢ –í—Å–µ –ª–æ–≥–∏ –∞—É–¥–∏—Ç–∞');
  console.log('‚Ä¢ –í—Å–µ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
  console.log('');
  console.log('‚ùå –ù–ï –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´:');
  console.log('‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ)');
  console.log('');

  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  const confirm1 = await askQuestion('‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ');
  
  if (confirm1.toLowerCase() !== 'yes') {
    console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
    rl.close();
    return;
  }

  console.log('');
  const confirm2 = await askQuestion('‚ùì –í–≤–µ–¥–∏—Ç–µ "DELETE ALL" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ');
  
  if (confirm2 !== 'DELETE ALL') {
    console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
    rl.close();
    return;
  }

  console.log('');
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É...');

  // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
  const backupPath = path.join(__dirname, '../backups', `backup-${Date.now()}.json`);
  const backupDir = path.dirname(backupPath);
  
  if (!fs.existsSync(backupDir)) {
    fs.mkdirSync(backupDir, { recursive: true });
  }

  try {
    fs.copyFileSync(dbPath, backupPath);
    console.log(`üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${backupPath}`);
  } catch (error) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é:', error.message);
  }

  // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const clearedData = {
    users: currentData.users || [], // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Å—Ç–∞–≤–ª—è–µ–º
    stocks: [], // –û—á–∏—â–∞–µ–º —Å–∫–ª–∞–¥—ã
    listings: [], // –û—á–∏—â–∞–µ–º –ª–æ—Ç—ã
    deals: [], // –û—á–∏—â–∞–µ–º —Å–¥–µ–ª–∫–∏
    auctions: [], // –û—á–∏—â–∞–µ–º –∞—É–∫—Ü–∏–æ–Ω—ã
    bids: [], // –û—á–∏—â–∞–µ–º —Å—Ç–∞–≤–∫–∏
    auditLog: [], // –û—á–∏—â–∞–µ–º –ª–æ–≥–∏
    persistentMessages: [] // –û—á–∏—â–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  };

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  try {
    fs.writeFileSync(dbPath, JSON.stringify(clearedData, null, 2));
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!');
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—á–∏—â–µ–Ω–Ω–æ–π –±–∞–∑—ã:', error.message);
    rl.close();
    return;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('');
  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ß–ò–°–¢–ö–ò:');
  console.log('---------------------');
  console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${clearedData.users.length} (—Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã)`);
  console.log(`üì¶ –¢–æ–≤–∞—Ä—ã –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö: ${clearedData.stocks.length} (—É–¥–∞–ª–µ–Ω—ã)`);
  console.log(`üõí –ê–∫—Ç–∏–≤–Ω—ã–µ –ª–æ—Ç—ã: ${clearedData.listings.length} (—É–¥–∞–ª–µ–Ω—ã)`);
  console.log(`ü§ù –°–¥–µ–ª–∫–∏: ${clearedData.deals.length} (—É–¥–∞–ª–µ–Ω—ã)`);
  console.log(`üî® –ê—É–∫—Ü–∏–æ–Ω—ã: ${clearedData.auctions.length} (—É–¥–∞–ª–µ–Ω—ã)`);
  console.log(`üí∞ –°—Ç–∞–≤–∫–∏: ${clearedData.bids.length} (—É–¥–∞–ª–µ–Ω—ã)`);
  console.log(`üìã –õ–æ–≥–∏ –∞—É–¥–∏—Ç–∞: ${clearedData.auditLog.length} (—É–¥–∞–ª–µ–Ω—ã)`);
  console.log(`üí¨ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${clearedData.persistentMessages.length} (—É–¥–∞–ª–µ–Ω—ã)`);
  console.log('');

  console.log('üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  console.log('üí° –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π');
  console.log('');

  rl.close();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  rl.close();
  process.exit(1);
});

process.on('unhandledRejection', (error) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message);
  rl.close();
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
clearDatabase().catch((error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error.message);
  rl.close();
  process.exit(1);
});
